name: SPARK Platinum Gates

on:
  push:
  pull_request:

jobs:
  fast-prove:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install system dependencies and build crypto libraries
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build libssl-dev wget

      - name: Build liboqs from source
        run: |
          wget https://github.com/open-quantum-safe/liboqs/archive/refs/tags/0.10.1.tar.gz
          tar xzf 0.10.1.tar.gz
          cd liboqs-0.10.1
          mkdir build && cd build
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=$HOME/deps ..
          ninja && ninja install

      - name: Build libsodium from source
        run: |
          wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.20.tar.gz
          tar xzf libsodium-1.0.20.tar.gz
          cd libsodium-1.0.20
          ./configure --prefix=$HOME/deps --enable-static --disable-shared
          make -j$(nproc) && make install

      # Install Alire toolchain (GNAT, gprbuild, gnatprove)
      - name: Install Alire
        uses: alire-project/setup-alire@v3
        with:
          version: '2.0.1'

      - name: Select Toolchain
        run: |
          alr --non-interactive toolchain --select
          alr toolchain
          gnatls --version || true

      - name: Fetch dependencies (including gnatprove)
        run: |
          # Fetch all dependencies declared in alire.toml (including gnatprove)
          alr update
          # Update environment to include all Alire-provided tools in PATH
          eval "$(alr printenv)"
          gnatprove --version

      # Fast proof: Run SPARK verification on all files
      - name: GNATprove (fast set)
        run: |
          eval "$(alr printenv)"
          rm -rf gnatprove || true
          # Run gnatprove on the entire project
          gnatprove -P anubis_spark.gpr --mode=prove --level=1 --timeout=120
          # Check for warnings or failures
          if test -f gnatprove/gnatprove.out; then
            echo "Proof results:"
            cat gnatprove/gnatprove.out
            if grep -iE "(warning|might fail)" gnatprove/gnatprove.out; then
              echo "::error::GNATprove warnings present - proof regression detected"
              exit 1
            fi
          fi

      - name: Build
        env:
          ANUBIS_LIB_DIR: $HOME/deps/lib
        run: |
          eval "$(alr printenv)"
          alr -q build

      - name: Unit tests / selftest
        run: ./bin/anubis_main test || echo "Selftests not implemented yet"

      - name: Upload proof logs (fast)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fast-prove-logs
          path: |
            gnatprove/**
            obj/gnatprove/**

  full-prove:
    runs-on: ubuntu-latest
    needs: fast-prove
    steps:
      - uses: actions/checkout@v4

      # Install system dependencies and build crypto libraries
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build libssl-dev wget

      - name: Build liboqs from source
        run: |
          wget https://github.com/open-quantum-safe/liboqs/archive/refs/tags/0.10.1.tar.gz
          tar xzf 0.10.1.tar.gz
          cd liboqs-0.10.1
          mkdir build && cd build
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=$HOME/deps ..
          ninja && ninja install

      - name: Build libsodium from source
        run: |
          wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.20.tar.gz
          tar xzf libsodium-1.0.20.tar.gz
          cd libsodium-1.0.20
          ./configure --prefix=$HOME/deps --enable-static --disable-shared
          make -j$(nproc) && make install

      - name: Install Alire
        uses: alire-project/setup-alire@v3
        with:
          version: '2.0.1'

      - name: Select Toolchain
        run: |
          alr --non-interactive toolchain --select
          alr toolchain

      - name: Fetch dependencies (including gnatprove)
        run: |
          # Fetch all dependencies declared in alire.toml (including gnatprove)
          alr update
          # Update environment to include all Alire-provided tools in PATH
          eval "$(alr printenv)"
          gnatprove --version

      # Full proof: Run complete SPARK verification with higher level
      - name: GNATprove (full set)
        run: |
          eval "$(alr printenv)"
          rm -rf gnatprove || true
          # Run gnatprove on entire project with higher proof level
          gnatprove -P anubis_spark.gpr --mode=prove --level=4 --timeout=600
          # Check for warnings or failures
          if test -f gnatprove/gnatprove.out; then
            echo "Proof results:"
            cat gnatprove/gnatprove.out
            if grep -iE "(warning|might fail)" gnatprove/gnatprove.out; then
              echo "::error::GNATprove warnings present - proof regression detected"
              exit 1
            fi
          fi

      - name: Build (release)
        env:
          ANUBIS_LIB_DIR: $HOME/deps/lib
        run: |
          eval "$(alr printenv)"
          alr -q build --release

      # Build and run boundary tests
      - name: Build boundary test
        run: |
          eval "$(alr printenv)"
          gnatmake -P anubis_spark.gpr tests/test_boundary.adb -o bin/test_boundary || echo "Boundary test build failed"

      - name: Run boundary test
        run: |
          ./bin/test_boundary || echo "Boundary test execution failed or not built"

      - name: Build boundary matrix test
        run: |
          eval "$(alr printenv)"
          gnatmake -P anubis_spark.gpr tests/test_boundary_matrix.adb -o bin/test_boundary_matrix || echo "Matrix test build failed"

      - name: Run boundary matrix test
        run: |
          ./bin/test_boundary_matrix || echo "Matrix test execution failed or not built"

      - name: Upload proof logs and test outputs (full)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-prove-logs-and-tests
          path: |
            gnatprove/**
            obj/gnatprove/**
            bin/test_boundary
            bin/test_boundary_matrix
